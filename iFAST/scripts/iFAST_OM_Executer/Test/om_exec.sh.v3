#!/bin/bash

installDir=`pwd`
COUNTERINFO="$1"
CONDITION="$2"
SITE_LIST="$3"
PID="$4"
OM_DRILL_MAPPING="$installDir/Conf/OMfamily_Drill_Mapping.csv"

dateTime=`date +%m-%d-%-Y_%H%M%S`
today=`date +%Y-%m-%d -d '+5 hour 0 min'` #use
yesterday=$(date -d "$today -1 days" "+%Y-%m-%d")
curr_Hour=`date -d '+5 hour' +%H`
prev_Hour=`date -d '+4 hour' +%H` #use
cst_curr_Hour=`date -d '1 hour ago' +%H`
cst_prev_Hour=`date -d '2 hour ago' +%H`
flag=0
prevHOur00="${prev_Hour}00"
currHour00="${curr_Hour}00"
today00=`date +%Y%m%d -d '+5 hour 0 min'`

#db_creds
drill_id="etl_devuser"
drill_pass="P@ssword1"
drill_ip="10.100.1.107"
#prints
echo "date=$today"
echo "prev_Hour=$prev_Hour"

#drill_date="${today} ${prev_Hour}"
drill_date="${yesterday} ${prev_Hour}"
echo "$drill_date"

if [ "$1" = "" ]; then
    echo "Usage :  om_exec.sh <OM_Info> <OM_condition> <siteIds comma seperated> <issueId_sequenceId>"
        exit
fi

if [ "$SITE_LIST" = "" ]; then
    echo "Cannot find NE information. Please double check the siteid"
    exit
else

    SITE_LIST="'$(echo "$SITE_LIST" | sed "s/,/','/g")'"
    echo "SITE_LIST=$SITE_LIST"

fi

get_OMCounterInfo_drill() {

#for omFamilyName in `cat $COUNTERINFO | cut -d"|" -f1 | egrep -v "#|^\$"`
for omFamilyName in `printf "$COUNTERINFO\n"| cut -d"|" -f1`
do
    tableName=$(awk -F',' '{ if ($1 == "'$omFamilyName'") { print $2 } }' $OM_DRILL_MAPPING )

    #echo "/opt/drill/apache-drill-1.19.0/bin/sqlline -u jdbc:drill:zk=local -e \"select * from dfs.vzdb.$tableName where NE_NAME IN ($SITE_LIST) and datetime_utc like '%${drill_date}%';\" --outputformat=\"csv\" > /opt/data/${omFamilyName}.csv"

   drill_cmd="/opt/drill/apache-drill-1.19.0/bin/sqlline -u jdbc:drill:zk=local -e \"select * from dfs.vzdb.$tableName where NE_NAME IN (${SITE_LIST}) and datetime_utc like '%${drill_date}%';\" --outputformat=\"csv\" > /opt/data/iFAST_Logs/${omFamilyName}_${PID}_${dateTime}.csv ; sed -i -e \"s/'//g\" -e \"s/apache drill>//g\" /opt/data/iFAST_Logs/${omFamilyName}_${PID}_${dateTime}.csv"

   echo "$drill_cmd"

   sshpass -p$drill_pass ssh -o StrictHostKeyChecking=no $drill_id@$drill_ip "$drill_cmd"
done

echo
{
        /usr/bin/expect  << EOF
        set timeout 100
        proc myExpect {string} {
                expect {
                        "Are you sure you want to continue connecting (yes/no)?" {send "yes\r";exp_continue}
                        timeout { send_user "TIMEOUT_WAITING_FOR_\$string\n"; exit }
                        "\$string" {}
                }
        }
        spawn sftp $drill_id@$drill_ip
        expect {
                "Are you sure you want to continue connecting (yes/no)?" {send "yes\r";exp_continue}
                timeout { send_user "CIQ_SERVER_SSH_TIMEOUT"; exit 1}
                eof { send_user "TIMEOUT_WAITING_FOR_\$string\n"; exit 1 }
                "password:"
        }
        send "$drill_pass\r"
        myExpect "sftp>"
        send "lcd $installDir/Logs/\r"
        myExpect "sftp>"
        send "cd /opt/data/iFAST_Logs/\r"
        myExpect "sftp>"
        send "ls -lrt\r"
        myExpect "sftp>"
        send "get *${PID}_${dateTime}.csv*\r"
        myExpect "sftp>"
        send_user "GET_OM_DATA SUCCESSFUL\n"
        send "exit\r"
        exit
EOF
}
#sed -n '/NE_NAME/,$p' fileName
}

#main
get_OMCounterInfo_drill
